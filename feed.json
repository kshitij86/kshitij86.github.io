{
    "version": "https://jsonfeed.org/version/1",
    "title": "kshitij86&#x27;s blog",
    "description": "",
    "home_page_url": "https://kshitij86.github.io",
    "feed_url": "https://kshitij86.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "kshitij86"
    },
    "items": [
        {
            "id": "https://kshitij86.github.io/3-hour-challenge-building-a-trade-tracker-for-mobile-and-web-using-reactjs-supabase.html",
            "url": "https://kshitij86.github.io/3-hour-challenge-building-a-trade-tracker-for-mobile-and-web-using-reactjs-supabase.html",
            "title": "3 Hour Challenge - Building a Trade Tracker for mobile and web using React.js + Supabase",
            "summary": "Recently I challenged myself to build an app from scratch that could help my track my trade ideas - in just three hours. Here is&hellip;",
            "content_html": "<p>Recently I challenged myself to build an app from scratch that could help my track my trade ideas - in just <em><strong>three hours</strong></em>.</p>\n<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1ikafs7r5p\">Setting up the backend with supabase</a></li>\n<li><a href=\"#mcetoc_1ikag4ah814\">Creating the React.js application</a></li>\n<li><a href=\"#mcetoc_1ikagn63b1i\">To finish it up</a></li>\n</ul>\n</div>\n<p>Here is the main idea I had with this app - </p>\n<p>1. The app should be responsive, so I used <a href=\"https://mui.com/material-ui/\">material-ui</a> - so I could jot down ideas easily using my phone</p>\n<p>2. I used <a href=\"https://supabase.com/\">supabase</a> with the app - so I wouldn't have to setup the database/backend and host it</p>\n<p>3. I hosted the app on netlify free tier - so deployment and builds become as easy as pushing to Github</p>\n<p>These are the main features I had in mind for this app - </p>\n<p>1. A multi-tab mobile app like UI for quickly switching between screens</p>\n<p>2. Adding trades in the app and store them in a database</p>\n<p>3. Some custom utility like adding new instruments on the fly</p>\n<h2 id=\"mcetoc_1ikafs7r5p\">Setting up the backend with supabase</h2>\n<p>Setting up the database with supabase is as simple as creating a table using the built-in UI editor.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://kshitij86.github.io/media/posts/1/Screenshot-2025-02-17-at-10.59.31-PM.png\" alt=\"supabase table editor\" width=\"2558\" height=\"1434\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://kshitij86.github.io/media/posts/1/responsive/Screenshot-2025-02-17-at-10.59.31-PM-xs.png 300w ,https://kshitij86.github.io/media/posts/1/responsive/Screenshot-2025-02-17-at-10.59.31-PM-sm.png 480w ,https://kshitij86.github.io/media/posts/1/responsive/Screenshot-2025-02-17-at-10.59.31-PM-md.png 768w ,https://kshitij86.github.io/media/posts/1/responsive/Screenshot-2025-02-17-at-10.59.31-PM-lg.png 1024w\"><figcaption>supabase table editor</figcaption></figure>\n<p>Skipping the obvious setting up of the tables - the most striking feature of supabase database is the RLS or Row Level Security that can be used to control individual rows using policies. After a few Google searches, it became clear that I needed to setup policies to allow access to my React app to read/write to a table. </p>\n<h2 id=\"mcetoc_1ikag4ah814\">Creating the React.js application</h2>\n<p>For the application, I used a bottom navigation based layout, that used different components, as shown below - </p>\n<div class=\"gallery-wrapper gallery-wrapper--full\"><div class=\"gallery\"  data-is-empty=\"false\" data-translation=\"Add images\" data-columns=\"2\">\n<figure class=\"gallery__item\"><a href=\"https://kshitij86.github.io/media/posts/1/gallery/Screenshot-2025-02-17-at-11.15.05-PM.png\" data-size=\"2558x1434\"><img loading=\"lazy\" src=\"https://kshitij86.github.io/media/posts/1/gallery/Screenshot-2025-02-17-at-11.15.05-PM-thumbnail.png\" alt=\"\" width=\"720\" height=\"404\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://kshitij86.github.io/media/posts/1/gallery/Screenshot-2025-02-17-at-11.12.18-PM.png\" data-size=\"2558x1434\"><img loading=\"lazy\" src=\"https://kshitij86.github.io/media/posts/1/gallery/Screenshot-2025-02-17-at-11.12.18-PM-thumbnail.png\" alt=\"\" width=\"720\" height=\"404\"></a></figure>\n</div></div>\n<p>It allows the user to select the instrument, a strategy name and describe the strategy in detail. The settings view has some basic options to add new instruments, delete test trades (useful when testing the app) and other features I plan to add to make this app really useful - like filtering trades based on the instrument name etc.</p>\n<p>Connecting the app to supabase was really simple - just add your connection string and the key. Then create a supabase client and basic CRUD works really well. It is possibly the simplest integration with a database+backend.</p>\n<p>Material UI components handled the rest - responsive components that can be used on the mobile easily without any additional setup.</p>\n<h2 id=\"mcetoc_1ikagn63b1i\">To finish it up</h2>\n<p>To deploy it I just had to push it to Github and that's it - netlify builds it automatically as new commits are pushed to the app. And I get my very own app hosted in a couple of hours.</p>\n<p>Building this app from scratch was to really just test my skills in frontend. Three hours may sound like a lot for an app so simple - but being out of touch with React.js for too long, it was probably more challenging for me than a seasoned UI developer. Still I had fun building it. I also plan to flesh out the features and add new ones - make it really useful for anyone who wants to quickly note down their trade ideas.</p>\n<p>Watch this space for more projects - I plan to explore complex topics in quant trading, AI, security and more soon.</p>",
            "author": {
                "name": "kshitij86"
            },
            "tags": [
            ],
            "date_published": "2025-02-17T23:00:44+05:30",
            "date_modified": "2025-02-17T23:25:10+05:30"
        }
    ]
}
